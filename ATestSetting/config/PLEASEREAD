Important things
-> For tower_costs.json you may update those values to be accurate to the game
Use the tower costs in MEDIUM <- i cannot stress this enough

-> For tower_upgrades.json, it does not neatly label which tower is which, mainly because
I started it with int name[x][y][z] instead of using enums or another naming 
convention that is better for humans, unfortunately was not able to quite be able to 
refactor

-> In this snippet below of the upgrade_json format
[
    [ -1, -1, -1, -1, -1 ],
    [ -1, -1, -1, -1, -1 ],
    [ -1, -1, -1, -1, -1 ]
  ],

  [
    [ 140, 200, 320, 1800, 15000 ],
    [ 100, 190, 450, 7200, 45000 ],
    [ 90, 200, 575, 2050, 21500 ]
  ],

-> The first chunk of a 3x5 matrix is for the hero, which is not allowed to be upgraded.
The next matrix represents the upgrades of the dart monkey. The order that these towers appear in are the same as the order of basecosts in the tower_costs.json file.
-> if you want to tell the ai explictly what upgrades NOT to get, set the value of the upgrade to -1.


-> For the settings.json, there are some metrics you are allowed.

-> The most important one here, is the "filePathToGameData" field, which is where your data should be.
The folder it should be in the folder BloonsTD6/gameData/gameData.json -> Please provide the complete file path to this
Example: "D:/Gamesfiles/Steam/steamapps/common/BloonsTD6/gameData/gameData.json" <- this would be a file path probable to have, and an example of what to have if BTD6 was not installed on the main drive.

-> Your difficulty settings specifies what difficulty the ai will be playing on, so if you're playing impoppable, please change the field to "IMPOPPABLE"
Options for difficulties are: "EASY", "MEDIUM", "HARD", "IMPOPPABLE" and "CHIMPS".
The ai does the same cost scaling as BTD6 does and scales costs depending on the difficulty. 


-> For the towers allowed, an integer represents a tower, below is a key to show you what which integer represents a tower.
Just a quick heads up, I don't recommend allowing BananaFarms (20) or BeastHandler(24), which are fairly complicated towers that the ai can't quite understand how to use them.
A valid way to format this is: 
"TowersAllowed" : [0, 16, 17] 
which tells the AI only the Hero, Ninja Monkey, and Alchemist are allowed.

-> Start of tower key

    {0, "Hero"},
    {1, "Dart Monkey"},
    {2, "Boomerang Monkey"},
    {3, "Bomb Shooter"},
    {4, "Tack Shooter"},
    {5, "Ice Monkey"},
    {6, "Glue Gunner"},
    {7, "Sniper Monkey"},
    {8, "Monkey Sub"},
    {9, "Monkey Buccaneer"},
    {10, "Monkey Ace"},
    {11, "Heli Pilot"},
    {12, "Mortar Monkey"},
    {13, "Dartling Gunner"},
    {14, "Wizard Monkey"},
    {15, "Super Monkey"},
    {16, "Ninja Monkey"},
    {17, "Alchemist"},
    {18, "Druid"},
    {19, "Mermonkey"},
    {20, "Banana Farm"},
    {21, "Spike Factory"},
    {22, "Monkey Village"},
    {23, "Engineer Monkey"},
    {24, "Beast Handler"},
    {25, "Desperado"}

-> end of tower key

-> Another setting is the "ChildrenPerGeneration" field, which simply tells the ai how many children each generation can have.
A higher number would reduce chances of running into a dead end when training, however may take much longer to produce a result.
-> Recommend atleast 10 if not more, however there's a chance that you may run into dead ends even with more children.
In any case that you run into a dead end, try deleting a couple of the most recent generations to see if it's possible to "salvage" the run.

